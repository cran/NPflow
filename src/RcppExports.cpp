// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// FmeasureC
double FmeasureC(NumericVector pred, NumericVector ref);
RcppExport SEXP NPflow_FmeasureC(SEXP predSEXP, SEXP refSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type pred(predSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ref(refSEXP);
    __result = Rcpp::wrap(FmeasureC(pred, ref));
    return __result;
END_RCPP
}
// FmeasureC_no0
double FmeasureC_no0(NumericVector pred, NumericVector ref);
RcppExport SEXP NPflow_FmeasureC_no0(SEXP predSEXP, SEXP refSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type pred(predSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ref(refSEXP);
    __result = Rcpp::wrap(FmeasureC_no0(pred, ref));
    return __result;
END_RCPP
}
// Fmeasure_costC
List Fmeasure_costC(arma::mat c);
RcppExport SEXP NPflow_Fmeasure_costC(SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type c(cSEXP);
    __result = Rcpp::wrap(Fmeasure_costC(c));
    return __result;
END_RCPP
}
// mmNiWpdfC
NumericMatrix mmNiWpdfC(arma::mat Mu, List Sigma, arma::mat U_Mu0, NumericVector U_Kappa0, NumericVector U_Nu0, List U_Sigma0, bool Log);
RcppExport SEXP NPflow_mmNiWpdfC(SEXP MuSEXP, SEXP SigmaSEXP, SEXP U_Mu0SEXP, SEXP U_Kappa0SEXP, SEXP U_Nu0SEXP, SEXP U_Sigma0SEXP, SEXP LogSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type Mu(MuSEXP);
    Rcpp::traits::input_parameter< List >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U_Mu0(U_Mu0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type U_Kappa0(U_Kappa0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type U_Nu0(U_Nu0SEXP);
    Rcpp::traits::input_parameter< List >::type U_Sigma0(U_Sigma0SEXP);
    Rcpp::traits::input_parameter< bool >::type Log(LogSEXP);
    __result = Rcpp::wrap(mmNiWpdfC(Mu, Sigma, U_Mu0, U_Kappa0, U_Nu0, U_Sigma0, Log));
    return __result;
END_RCPP
}
// mmsNiWpdfC
NumericMatrix mmsNiWpdfC(arma::mat xi, arma::mat psi, List Sigma, arma::mat U_xi0, arma::mat U_psi0, List U_B0, List U_Sigma0, NumericVector U_df0, bool Log);
RcppExport SEXP NPflow_mmsNiWpdfC(SEXP xiSEXP, SEXP psiSEXP, SEXP SigmaSEXP, SEXP U_xi0SEXP, SEXP U_psi0SEXP, SEXP U_B0SEXP, SEXP U_Sigma0SEXP, SEXP U_df0SEXP, SEXP LogSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< List >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U_xi0(U_xi0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U_psi0(U_psi0SEXP);
    Rcpp::traits::input_parameter< List >::type U_B0(U_B0SEXP);
    Rcpp::traits::input_parameter< List >::type U_Sigma0(U_Sigma0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type U_df0(U_df0SEXP);
    Rcpp::traits::input_parameter< bool >::type Log(LogSEXP);
    __result = Rcpp::wrap(mmsNiWpdfC(xi, psi, Sigma, U_xi0, U_psi0, U_B0, U_Sigma0, U_df0, Log));
    return __result;
END_RCPP
}
// mmvnpdfC
NumericMatrix mmvnpdfC(NumericMatrix x, NumericMatrix mean, List varcovM, bool Log);
RcppExport SEXP NPflow_mmvnpdfC(SEXP xSEXP, SEXP meanSEXP, SEXP varcovMSEXP, SEXP LogSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< List >::type varcovM(varcovMSEXP);
    Rcpp::traits::input_parameter< bool >::type Log(LogSEXP);
    __result = Rcpp::wrap(mmvnpdfC(x, mean, varcovM, Log));
    return __result;
END_RCPP
}
// mmvsnpdfC
NumericMatrix mmvsnpdfC(NumericMatrix x, NumericMatrix xi, NumericMatrix psi, List sigma, bool Log);
RcppExport SEXP NPflow_mmvsnpdfC(SEXP xSEXP, SEXP xiSEXP, SEXP psiSEXP, SEXP sigmaSEXP, SEXP LogSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< List >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< bool >::type Log(LogSEXP);
    __result = Rcpp::wrap(mmvsnpdfC(x, xi, psi, sigma, Log));
    return __result;
END_RCPP
}
// mmvstpdfC
NumericMatrix mmvstpdfC(arma::mat x, arma::mat xi, arma::mat psi, List sigma, NumericVector df, bool Log);
RcppExport SEXP NPflow_mmvstpdfC(SEXP xSEXP, SEXP xiSEXP, SEXP psiSEXP, SEXP sigmaSEXP, SEXP dfSEXP, SEXP LogSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< List >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type df(dfSEXP);
    Rcpp::traits::input_parameter< bool >::type Log(LogSEXP);
    __result = Rcpp::wrap(mmvstpdfC(x, xi, psi, sigma, df, Log));
    return __result;
END_RCPP
}
// mmvtpdfC
NumericMatrix mmvtpdfC(NumericMatrix x, NumericMatrix mean, List varcovM, NumericVector df, bool Log);
RcppExport SEXP NPflow_mmvtpdfC(SEXP xSEXP, SEXP meanSEXP, SEXP varcovMSEXP, SEXP dfSEXP, SEXP LogSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< List >::type varcovM(varcovMSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type df(dfSEXP);
    Rcpp::traits::input_parameter< bool >::type Log(LogSEXP);
    __result = Rcpp::wrap(mmvtpdfC(x, mean, varcovM, df, Log));
    return __result;
END_RCPP
}
// mvnpdfC
NumericVector mvnpdfC(NumericMatrix x, NumericVector mean, NumericMatrix varcovM, bool Log);
RcppExport SEXP NPflow_mvnpdfC(SEXP xSEXP, SEXP meanSEXP, SEXP varcovMSEXP, SEXP LogSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type varcovM(varcovMSEXP);
    Rcpp::traits::input_parameter< bool >::type Log(LogSEXP);
    __result = Rcpp::wrap(mvnpdfC(x, mean, varcovM, Log));
    return __result;
END_RCPP
}
// mvstlikC
List mvstlikC(arma::mat x, arma::vec c, arma::vec clustval, arma::mat xi, arma::mat psi, List sigma, NumericVector df, bool loglik);
RcppExport SEXP NPflow_mvstlikC(SEXP xSEXP, SEXP cSEXP, SEXP clustvalSEXP, SEXP xiSEXP, SEXP psiSEXP, SEXP sigmaSEXP, SEXP dfSEXP, SEXP loglikSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type c(cSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type clustval(clustvalSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< List >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type df(dfSEXP);
    Rcpp::traits::input_parameter< bool >::type loglik(loglikSEXP);
    __result = Rcpp::wrap(mvstlikC(x, c, clustval, xi, psi, sigma, df, loglik));
    return __result;
END_RCPP
}
// NuMatParC
List NuMatParC(NumericVector c, arma::mat d);
RcppExport SEXP NPflow_NuMatParC(SEXP cSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type c(cSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type d(dSEXP);
    __result = Rcpp::wrap(NuMatParC(c, d));
    return __result;
END_RCPP
}
// sampleClassC
IntegerVector sampleClassC(arma::mat probMat);
RcppExport SEXP NPflow_sampleClassC(SEXP probMatSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type probMat(probMatSEXP);
    __result = Rcpp::wrap(sampleClassC(probMat));
    return __result;
END_RCPP
}
// similarityMat_nocostC
List similarityMat_nocostC(arma::mat cc);
RcppExport SEXP NPflow_similarityMat_nocostC(SEXP ccSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type cc(ccSEXP);
    __result = Rcpp::wrap(similarityMat_nocostC(cc));
    return __result;
END_RCPP
}
// similarityMatC
List similarityMatC(arma::mat cc);
RcppExport SEXP NPflow_similarityMatC(SEXP ccSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type cc(ccSEXP);
    __result = Rcpp::wrap(similarityMatC(cc));
    return __result;
END_RCPP
}
// traceEpsC
NumericVector traceEpsC(arma::mat eps, arma::mat sigma);
RcppExport SEXP NPflow_traceEpsC(SEXP epsSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    __result = Rcpp::wrap(traceEpsC(eps, sigma));
    return __result;
END_RCPP
}
// vclust2mcoclustC
List vclust2mcoclustC(NumericVector c);
RcppExport SEXP NPflow_vclust2mcoclustC(SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type c(cSEXP);
    __result = Rcpp::wrap(vclust2mcoclustC(c));
    return __result;
END_RCPP
}
